/* automatically generated by rust-bindgen 0.59.2 */

pub const _VCRT_COMPILER_PREPROCESSOR: u32 = 1;
pub const _SAL_VERSION: u32 = 20;
pub const __SAL_H_VERSION: u32 = 180000000;
pub const _USE_DECLSPECS_FOR_SAL: u32 = 0;
pub const _USE_ATTRIBUTES_FOR_SAL: u32 = 0;
pub const _CRT_PACKING: u32 = 8;
pub const _HAS_EXCEPTIONS: u32 = 1;
pub const NULL: u32 = 0;
pub const _HAS_CXX17: u32 = 0;
pub const _HAS_CXX20: u32 = 0;
pub const _HAS_CXX23: u32 = 0;
pub const _HAS_NODISCARD: u32 = 1;
pub const WCHAR_MIN: u32 = 0;
pub const WCHAR_MAX: u32 = 65535;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 65535;
pub type va_list = *mut ::std::os::raw::c_char;
extern "C" {
    pub fn __va_start(arg1: *mut va_list, ...);
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct __vcrt_va_list_is_reference {
    pub _address: u8,
}
pub const __vcrt_va_list_is_reference___the_value: bool = false;
pub type __vcrt_va_list_is_reference__bindgen_ty_1 = bool;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct __vcrt_assert_va_start_is_not_reference {
    pub _address: u8,
}
pub type size_t = ::std::os::raw::c_ulonglong;
pub type __vcrt_bool = bool;
extern "C" {
    pub fn __security_init_cookie();
}
extern "C" {
    pub fn __security_check_cookie(_StackCookie: usize);
}
extern "C" {
    pub fn __report_gsfailure(_StackCookie: usize);
}
extern "C" {
    pub static mut __security_cookie: usize;
}
pub type int_least8_t = ::std::os::raw::c_schar;
pub type int_least16_t = ::std::os::raw::c_short;
pub type int_least32_t = ::std::os::raw::c_int;
pub type int_least64_t = ::std::os::raw::c_longlong;
pub type uint_least8_t = ::std::os::raw::c_uchar;
pub type uint_least16_t = ::std::os::raw::c_ushort;
pub type uint_least32_t = ::std::os::raw::c_uint;
pub type uint_least64_t = ::std::os::raw::c_ulonglong;
pub type int_fast8_t = ::std::os::raw::c_schar;
pub type int_fast16_t = ::std::os::raw::c_int;
pub type int_fast32_t = ::std::os::raw::c_int;
pub type int_fast64_t = ::std::os::raw::c_longlong;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_uint;
pub type uint_fast32_t = ::std::os::raw::c_uint;
pub type uint_fast64_t = ::std::os::raw::c_ulonglong;
pub type intmax_t = ::std::os::raw::c_longlong;
pub type uintmax_t = ::std::os::raw::c_ulonglong;
extern "C" {
    #[link_name = "\u{1}?CreateOptionsBC1@@YAHPEAPEAX@Z"]
    pub fn CreateOptionsBC1(optionsBC1: *mut *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CreateOptionsBC2@@YAHPEAPEAX@Z"]
    pub fn CreateOptionsBC2(optionsBC2: *mut *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CreateOptionsBC3@@YAHPEAPEAX@Z"]
    pub fn CreateOptionsBC3(optionsBC3: *mut *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CreateOptionsBC4@@YAHPEAPEAX@Z"]
    pub fn CreateOptionsBC4(optionsBC4: *mut *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CreateOptionsBC5@@YAHPEAPEAX@Z"]
    pub fn CreateOptionsBC5(optionsBC5: *mut *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CreateOptionsBC6@@YAHPEAPEAX@Z"]
    pub fn CreateOptionsBC6(optionsBC6: *mut *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CreateOptionsBC7@@YAHPEAPEAX@Z"]
    pub fn CreateOptionsBC7(optionsBC7: *mut *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DestroyOptionsBC1@@YAHPEAX@Z"]
    pub fn DestroyOptionsBC1(optionsBC1: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DestroyOptionsBC2@@YAHPEAX@Z"]
    pub fn DestroyOptionsBC2(optionsBC2: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DestroyOptionsBC3@@YAHPEAX@Z"]
    pub fn DestroyOptionsBC3(optionsBC3: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DestroyOptionsBC4@@YAHPEAX@Z"]
    pub fn DestroyOptionsBC4(optionsBC4: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DestroyOptionsBC5@@YAHPEAX@Z"]
    pub fn DestroyOptionsBC5(optionsBC5: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DestroyOptionsBC6@@YAHPEAX@Z"]
    pub fn DestroyOptionsBC6(optionsBC6: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DestroyOptionsBC7@@YAHPEAX@Z"]
    pub fn DestroyOptionsBC7(optionsBC7: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetChannelWeightsBC1@@YAHPEAXMMM@Z"]
    pub fn SetChannelWeightsBC1(
        options: *mut ::std::os::raw::c_void,
        WeightRed: f32,
        WeightGreen: f32,
        WeightBlue: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetChannelWeightsBC2@@YAHPEAXMMM@Z"]
    pub fn SetChannelWeightsBC2(
        options: *mut ::std::os::raw::c_void,
        WeightRed: f32,
        WeightGreen: f32,
        WeightBlue: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetChannelWeightsBC3@@YAHPEAXMMM@Z"]
    pub fn SetChannelWeightsBC3(
        options: *mut ::std::os::raw::c_void,
        WeightRed: f32,
        WeightGreen: f32,
        WeightBlue: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetDecodeChannelMapping@@YAHPEAX_N@Z"]
    pub fn SetDecodeChannelMapping(
        options: *mut ::std::os::raw::c_void,
        mapRGBA: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetQualityBC1@@YAHPEAXM@Z"]
    pub fn SetQualityBC1(
        options: *mut ::std::os::raw::c_void,
        fquality: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetQualityBC2@@YAHPEAXM@Z"]
    pub fn SetQualityBC2(
        options: *mut ::std::os::raw::c_void,
        fquality: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetQualityBC3@@YAHPEAXM@Z"]
    pub fn SetQualityBC3(
        options: *mut ::std::os::raw::c_void,
        fquality: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetQualityBC4@@YAHPEAXM@Z"]
    pub fn SetQualityBC4(
        options: *mut ::std::os::raw::c_void,
        fquality: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetQualityBC5@@YAHPEAXM@Z"]
    pub fn SetQualityBC5(
        options: *mut ::std::os::raw::c_void,
        fquality: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetQualityBC6@@YAHPEAXM@Z"]
    pub fn SetQualityBC6(
        options: *mut ::std::os::raw::c_void,
        fquality: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetQualityBC7@@YAHPEAXM@Z"]
    pub fn SetQualityBC7(
        options: *mut ::std::os::raw::c_void,
        fquality: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetAlphaThresholdBC1@@YAHPEAXE@Z"]
    pub fn SetAlphaThresholdBC1(
        options: *mut ::std::os::raw::c_void,
        alphaThreshold: ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetRefineStepsBC1@@YAHPEAXI@Z"]
    pub fn SetRefineStepsBC1(
        options: *mut ::std::os::raw::c_void,
        steps: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetMaskBC6@@YAHPEAXI@Z"]
    pub fn SetMaskBC6(
        options: *mut ::std::os::raw::c_void,
        mask: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetMaskBC7@@YAHPEAXE@Z"]
    pub fn SetMaskBC7(
        options: *mut ::std::os::raw::c_void,
        mask: ::std::os::raw::c_uchar,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetAlphaOptionsBC7@@YAHPEAX_N11@Z"]
    pub fn SetAlphaOptionsBC7(
        options: *mut ::std::os::raw::c_void,
        imageNeedsAlpha: bool,
        colourRestrict: bool,
        alphaRestrict: bool,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetErrorThresholdBC7@@YAHPEAXMM@Z"]
    pub fn SetErrorThresholdBC7(
        options: *mut ::std::os::raw::c_void,
        minThreshold: f32,
        maxThreshold: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetSrgbBC1@@YAHPEAX_N@Z"]
    pub fn SetSrgbBC1(options: *mut ::std::os::raw::c_void, sRGB: bool) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetSrgbBC2@@YAHPEAX_N@Z"]
    pub fn SetSrgbBC2(options: *mut ::std::os::raw::c_void, sRGB: bool) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetSrgbBC3@@YAHPEAX_N@Z"]
    pub fn SetSrgbBC3(options: *mut ::std::os::raw::c_void, sRGB: bool) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?SetSignedBC6@@YAHPEAX_N@Z"]
    pub fn SetSignedBC6(options: *mut ::std::os::raw::c_void, sf16: bool) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CompressBlockBC1@@YAHPEBEIQEAEPEBX@Z"]
    pub fn CompressBlockBC1(
        srcBlock: *const ::std::os::raw::c_uchar,
        srcStrideInBytes: ::std::os::raw::c_uint,
        cmpBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CompressBlockBC2@@YAHPEBEIQEAEPEBX@Z"]
    pub fn CompressBlockBC2(
        srcBlock: *const ::std::os::raw::c_uchar,
        srcStrideInBytes: ::std::os::raw::c_uint,
        cmpBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CompressBlockBC3@@YAHPEBEIQEAEPEBX@Z"]
    pub fn CompressBlockBC3(
        srcBlock: *const ::std::os::raw::c_uchar,
        srcStrideInBytes: ::std::os::raw::c_uint,
        cmpBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CompressBlockBC7@@YAHPEBEIQEAEPEBX@Z"]
    pub fn CompressBlockBC7(
        srcBlock: *const ::std::os::raw::c_uchar,
        srcStrideInBytes: ::std::os::raw::c_uint,
        cmpBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DecompressBlockBC1@@YAHQEBEQEAEPEBX@Z"]
    pub fn DecompressBlockBC1(
        cmpBlock: *const ::std::os::raw::c_uchar,
        srcBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DecompressBlockBC2@@YAHQEBEQEAEPEBX@Z"]
    pub fn DecompressBlockBC2(
        cmpBlock: *const ::std::os::raw::c_uchar,
        srcBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DecompressBlockBC3@@YAHQEBEQEAEPEBX@Z"]
    pub fn DecompressBlockBC3(
        cmpBlock: *const ::std::os::raw::c_uchar,
        srcBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DecompressBlockBC7@@YAHQEBEQEAEPEBX@Z"]
    pub fn DecompressBlockBC7(
        cmpBlock: *const ::std::os::raw::c_uchar,
        srcBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CompressBlockBC4@@YAHPEBEIQEAEPEBX@Z"]
    pub fn CompressBlockBC4(
        srcBlock: *const ::std::os::raw::c_uchar,
        srcStrideInBytes: ::std::os::raw::c_uint,
        cmpBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DecompressBlockBC4@@YAHQEBEQEAEPEBX@Z"]
    pub fn DecompressBlockBC4(
        cmpBlock: *const ::std::os::raw::c_uchar,
        srcBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CompressBlockBC4S@@YAHPEBDIQEAEPEBX@Z"]
    pub fn CompressBlockBC4S(
        srcBlock: *const ::std::os::raw::c_char,
        srcStrideInBytes: ::std::os::raw::c_uint,
        cmpBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DecompressBlockBC4S@@YAHQEBEQEADPEBX@Z"]
    pub fn DecompressBlockBC4S(
        cmpBlock: *const ::std::os::raw::c_uchar,
        srcBlock: *mut ::std::os::raw::c_char,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CompressBlockBC5@@YAHPEBEI0IQEAEPEBX@Z"]
    pub fn CompressBlockBC5(
        srcBlock1: *const ::std::os::raw::c_uchar,
        srcStrideInBytes1: ::std::os::raw::c_uint,
        srcBlock2: *const ::std::os::raw::c_uchar,
        srcStrideInBytes2: ::std::os::raw::c_uint,
        cmpBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DecompressBlockBC5@@YAHQEBEQEAE1PEBX@Z"]
    pub fn DecompressBlockBC5(
        cmpBlock: *const ::std::os::raw::c_uchar,
        srcBlock1: *mut ::std::os::raw::c_uchar,
        srcBlock2: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CompressBlockBC5S@@YAHPEBDI0IQEAEPEBX@Z"]
    pub fn CompressBlockBC5S(
        srcBlock1: *const ::std::os::raw::c_char,
        srcStrideInBytes1: ::std::os::raw::c_uint,
        srcBlock2: *const ::std::os::raw::c_char,
        srcStrideInBytes2: ::std::os::raw::c_uint,
        cmpBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DecompressBlockBC5S@@YAHQEBEQEAD1PEBX@Z"]
    pub fn DecompressBlockBC5S(
        cmpBlock: *const ::std::os::raw::c_uchar,
        srcBlock1: *mut ::std::os::raw::c_char,
        srcBlock2: *mut ::std::os::raw::c_char,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?CompressBlockBC6@@YAHPEBGIQEAEPEBX@Z"]
    pub fn CompressBlockBC6(
        srcBlock: *const ::std::os::raw::c_ushort,
        srcStrideInShorts: ::std::os::raw::c_uint,
        cmpBlock: *mut ::std::os::raw::c_uchar,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}?DecompressBlockBC6@@YAHQEBEQEAGPEBX@Z"]
    pub fn DecompressBlockBC6(
        cmpBlock: *const ::std::os::raw::c_uchar,
        srcBlock: *mut ::std::os::raw::c_ushort,
        options: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
